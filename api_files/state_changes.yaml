openapi: 3.0.3
info:
  title: State Change API
  description: |-
    This is the specification for state changes
    The API is based on the OpenAPI 3.0 specification.
  version: 0.0.1
components:
  schemas:
    State:
      required:
        - unstructured
      type: object
      properties:
        unstructured:
          type: string
          description: text description of current state
        mission:
          $ref: "#/components/schemas/Mission"
        environment:
          $ref: "#/components/schemas/Environment"
        threat_state:
          $ref: "#/components/schemas/ThreatState"
        supplies:
          type: array
          description: a list of medical supplies available to the DM
          items:
            $ref: "#/components/schemas/Supplies"
        characters:
          type: array
          description: the list of characters in the scenario
          items:
            $ref: "#/components/schemas/Character"
      description:
        the current tactical & environmental state of the scenario and
        of its characters.

    AlignmentResults:
      title: AlignmentResults
      required:
        - alignment_source
        - alignment_target_id
        - score
        - kdma_values
      type: object
      properties:
        alignment_source:
          title: Alignment Source
          type: array
          items:
            "$ref": "#/components/schemas/AlignmentSource"
        alignment_target_id:
          title: Alignment Target Id
          type: string
          description: ID of desired profile to align responses to.
        score:
          title: Score
          maximum: 1
          minimum: 0
          type: number
          description: Measured alignment, 0 (completely unaligned) - 1 (completely aligned).
        kdma_values:
          title: Kdma Values
          type: array
          items:
            "$ref": "#/components/schemas/KDMA_Value"
          description: Computed KDMA profile from results
      description: Computed KDMA profile and alignment score for a set of decisions.
    AlignmentSource:
      title: AlignmentSource
      required:
        - scenario_id
        - probes
      type: object
      properties:
        scenario_id:
          title: Scenario Id
          type: string
          description: Unique ID for user session.
        probes:
          title: Probes
          type: array
          items:
            type: string
          description: List of ID's of probes used to compute alignment.
      description: |-
        Describes which session/probe responses were used to
        compute an alignment score, allowing for lots
        of flexibility.
    AlignmentTarget:
      required:
        - id
        - kdma_values
      type: object
      properties:
        id:
          type: string
          description: globally unique alignment target id
        kdma_values:
          type: array
          description: list of KDMAs to align to
          items:
            $ref: "#/components/schemas/KDMA_Value"
      description: list of KDMAs to align to
      example:
        kdma_values:
          - value: 0.8
            kdma: mission
          - value: 0.8
            kdma: mission
        id: id
    KDMA_Value:
      required:
        - kdma
        - value
      type: object
      properties:
        kdma:
          type: string
          description: KDMA name
          example: mission
        value:
          type: number
          description: target alignment value
          format: float
          example: 0.8
      description: a KDMA and its value
      example:
        value: 0.8
        kdma: mission

    Mission:
      required:
        - unstructured
      type: object
      properties:
        unstructured:
          type: string
          description: natural language description of current mission
          example: Place sensors in and around the jungle base
        mission_type:
          $ref: "#/components/schemas/MissionTypeEnum"
        critical_ids:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/CriticalLevelEnum"
          example:
            - 123: none
            - 456: priority
          description: A list of pairs of character ids with an indicator of how mission-critical the character is
        civilian_presence:
          $ref: "#/components/schemas/CivilianPresenceEnum"
        communication_capability:
          $ref: "#/components/schemas/CommunicationCapabilityEnum"
        roe:
          type: string
          description: rules of engagement to inform decision-making, but not to restrict decision space
        political_climate:
          type: string
          description: The political climate in a mission to inform decision-making
        medical_policies:
          type: string
          description: Medical policies in effect in a mission, to inform decision-making
      description: Mission parameters that impact decision-making
    Environment:
      type: object
      description: Environmental parameters that impact either decision-making, the simulation environment, or both
      properties:
        sim_environment:
          $ref: "#/components/schemas/SimEnvironment"
        decision_environment:
          $ref: "#/components/schemas/DecisionEnvironment"

    SimEnvironment:
      required:
        - type
      type: object
      properties:
        type:
          $ref: "#/components/schemas/SimEnvironmentTypeEnum"
        weather:
          $ref: "#/components/schemas/WeatherTypeEnum"
        terrain:
          $ref: "#/components/schemas/TerrainTypeEnum"
        flora:
          $ref: "#/components/schemas/FloraTypeEnum"
        fauna:
          $ref: "#/components/schemas/FaunaTypeEnum"
        temperature:
          type: number
          format: float
          description: numerical temperature in degrees Fahrenheit
          example: 82.5
        humidity:
          type: number
          format: float
          description: percentage of relative humidity
          example: 80
        lighting:
          $ref: "#/components/schemas/LightingTypeEnum"
        visibility:
          $ref: "#/components/schemas/VisibilityTypeEnum"
        noise_ambient:
          $ref: "#/components/schemas/AmbientNoiseEnum"
        noise_peak:
          $ref: "#/components/schemas/PeakNoiseEnum"
      description: Elements that impact simulation configuration

    DecisionEnvironment:
      required:
        - unstructured
      type: object
      description: Elements that impact decision-making
      properties:
        unstructured:
          type: string
          description: Natural language, plain text description of decision-impacting environmental factors
        aid_delay:
          $ref: "#/components/schemas/AidDelay"
        movement_restriction:
          $ref: "#/components/schemas/MovementRestrictionEnum"
        sound_restriction:
          $ref: "#/components/schemas/SoundRestrictionEnum"
        oxygen_levels:
          $ref: "#/components/schemas/OxygenLevelsEnum"
        population_density:
          type: number
          format: float
          description: Population per square mile
        injury_triggers:
          $ref: "#/components/schemas/InjuryTriggerEnum"
        air_quality:
          type: integer
          description: Air Quality Index (AQI)
        city_infrastructure:
          type: string
          description: TBD
    AidDelay:
      required:
        - delay
      type: object
      description: Properties related to CASEVAC or MEDEVAC
      properties:
        delay:
          type: number
          format: float
          description: CASEVAC or MEDEVAC timer, in minutes
        type:
          $ref: "#/components/schemas/AidTypeEnum"
        max_transport:
          type: integer
          description: Maximum number of casualties that can be transported
    ThreatState:
      required:
        - unstructured
      type: object
      properties:
        unstructured:
          type: string
          description: text description of current threat state
          example: No additional threats are detected
        threats:
          type: array
          description: An array of threats
          items:
            $ref: "#/components/schemas/Threat"
      description: Description of the current threat to the characters, including the medic
      example:
        unstructured: No additional threats are detected
        threats:
          - type: Gunfire
            severity: 0.5
          - type: Gunfire
            severity: 0.5
    Threat:
      type: object
      additionalProperties:
        type: string
      description: |-
        list of pairs of type (enum like IED, Gunshots, fire, etc)
        and severity (float 0 (no threat) - 1 (max severity))
      example:
        type: Gunfire
        severity: 0.5
    Supplies:
      required:
        - quantity
        - type
        - reusable
      type: object
      properties:
        type:
          $ref: "#/components/schemas/SupplyTypeEnum"
        reusable:
          type: boolean
          description: Whether or not item is consumable/reusable
        quantity:
          type: integer
          description:
            the number (count) of this item available to the medic at the
            present time
          format: int32
          example: 4
      description: a single type of medical supply available to the medic
      example:
        quantity: 4
        type: Tourniquet

    Character:
      required:
        - id
        - name
        - unstructured
        - demographics
        - vitals
      type: object
      properties:
        id:
          type: string
          description: string, globally unique character identifier
        name:
          type: string
          description: display name, as in a dashboard
        unstructured:
          type: string
          description: natural language text description of the character
        unstructured_postassess:
          type: string
          description: Natural language, plain text description of the character, including injuries, demographics, and rapport
        rapport:
          type: number
          format: float
          description: A measure of closeness or affinity towards the player/medic
        demographics:
          $ref: "#/components/schemas/Demographics"
        injuries:
          type: array
          description: an array of character injuries
          items:
            $ref: "#/components/schemas/Injury"
        vitals:
          $ref: "#/components/schemas/Vitals"
      description: encapulation of a single character in the scenario
    Demographics:
      required:
        - age
        - sex
        - race
      type: object
      properties:
        age:
          type: integer
          description: the age of the character, omit if unknown
          format: int16
          example: 32
        sex:
          $ref: "#/components/schemas/DemographicSexEnum"
        race:
          type: string
          description: Race or ethnicity
        military_disposition:
          $ref: "#/components/schemas/MilitaryDispositionEnum"
        military_branch:
          $ref: "#/components/schemas/MilitaryBranchEnum"
        rank:
          $ref: "#/components/schemas/MilitaryRankEnum"
        rank_title:
          $ref: "#/components/schemas/MilitaryRankTitleEnum"
        skills:
          type: array
          items:
            $ref: "#/components/schemas/Skills"
        role:
          $ref: "#/components/schemas/CharacterRoleEnum"
        mission_importance:
          $ref: "#/components/schemas/CharacterImportanceEnum"
      description: Basic properties about the character
    Skills:
      required:
        - skill_type
        - level
      type: object
      properties:
        skill_type:
          $ref: "#/components/schemas/SkillTypeEnum"
        level:
          type: number
          format: float
          description: the level of expertise the character has in their skill
    Injury:
      required:
        - location
        - name
        - hidden
      type: object
      properties:
        name:
          $ref: "#/components/schemas/InjuryTypeEnum"
        location:
          $ref: "#/components/schemas/InjuryLocationEnum"
        severity:
          type: number
          format: float
          description: the apparent severity of the injury from 0 (low) to 1.0 (high)
          example: 0.8
        hidden:
          type: boolean
          description: Whether the injury is known prior to assessment
      description: An injury on a character. The name field defines a controlled vocabulary.
    Vitals:
      required:
        - conscious
        - avpu
        - mental_status
        - breathing
        - hrpmin
        - Spo2
      type: object
      properties:
        conscious:
          type: boolean
          description: whether or not the character is conscious
          example: true
        avpu:
          $ref: "#/components/schemas/AvpuLevelEnum"
        mental_status:
          $ref: "#/components/schemas/MentalStatusEnum"
        breathing:
          $ref: "#/components/schemas/BreathingLevelEnum"
        hrpmin:
          type: integer
          format: int16
          description: heart rate in beats per minute
        Spo2:
          type: number
          format: float
          description: blood oxygen level
      description: "vital levels for a character, omit properties if unknown"

    Scene:
      required:
        - index
        - state
        - end_scenario_allowed
        - actions
      type: object
      properties:
        index:
          type: integer
          description: The order the scene appears in the scenario
        state:
          $ref: "#/components/schemas/State"
        end_scenario_allowed:
          type: boolean
          description: Whether ADMs can end the scenario during this scene
        tagging:
          $ref: "#/components/schemas/Tagging"
        actions:
          description: List of available actions
          type: array
          items:
            $ref: "#/components/schemas/Action"
        transition_semantics:
          $ref: "#/components/schemas/SemanticTypeEnum"
        transitions:
          $ref: "#/components/schemas/Conditions"
    Action:
      required:
        - id
        - type
        - unstructured
        - character_id
      type: object
      properties:
        id:
          type: string
          description: action ID
        type:
          $ref: "#/components/schemas/ActionTypeEnum"
        unstructured:
          type: string
          description: a plain text unstructured description of the action
          example: "Check pulse of character [1234]."
        repeatable:
          type: boolean
          description: Whether or not this action should remain after it's selected by an ADM.
        character_id:
          type: string
          description: The ID of the character being acted upon
        parameters:
          type: object
          additionalProperties:
            type: string
          description: key-value pairs containing additional action-specific parameters
          example:
            - treatment: Tourniquet
            - location: right forearm
        probe_id:
          type: string
          description: A valid probe_id from the appropriate TA1
        choice:
          type: string
          description: A valid choice for the specified probe_id
        kdma_association:
          type: object
          additionalProperties:
            type: number
            format: float
          description: KDMA associations with this action used in training
          example:
            - Mission: 0.8
        condition_semantics:
          $ref: "#/components/schemas/SemanticTypeEnum"
        conditions:
          $ref: "#/components/schemas/Conditions"
      description: An encapulation of a single action taken by a DM
    Conditions:
      type: object
      description: Conditions that specify whether to transition to the next scene or send a probe response
      properties:
        elapsed_time_lt:
          type: integer
          description: True if the scenario elapsed time (in seconds) is less than the specified value
        elapsed_time_gt:
          type: integer
          description: True if the scenario elapsed time (in seconds) is greater than the specified value
        actions:
          description: multiple action ID lists have "or" semantics; multiple action IDs within a list have "and" semantics
          type: array
          items:
            type: array
            items:
              type: string
        probes:
          type: array
          items:
            type: string
        probe_responses:
          type: array
          items:
            type: string
        character_vitals:
          type: array
          items:
            type: object
            description: The minimum vitals of the specified character
            properties:
              character_id:
                type: string
                description: The ID of the character in question
              vitals:
                $ref: "#/components/schemas/Vitals"
        supplies:
          type: array
          description: a list of medical supplies available to the DM
          items:
            $ref: "#/components/schemas/Supplies"
    Tagging:
      type: object
      description: Scene-level tagging configuration
      properties:
        enabled:
          type: boolean
        repeatable:
          type: boolean
        probe_responses:
          type: array
          items:
            $ref: "#/components/schemas/Probe"
        reference:
          type: integer
    Probe:
      required:
        - character_id
        - probe_id
        - minimal
        - delayed
        - immediate
        - expectant
      type: object
      properties:
        character_id:
          type: string
          description: A valid character ID from the scene
        probe_id:
          type: string
          description: A valid probe_id from the appropriate TA1
        minimal:
          type: string
          description: The probe response to send for a MINIMAL tag
        delayed:
          type: string
          description: The probe response to send for a DELAYED tag
        immediate:
          type: string
          description: The probe response to send for a IMMEDIATE tag
        expectant:
          type: string
          description: The probe response to send for a EXPECTANT tag

    MissionTypeEnum:
      type: string
      description: enumeration of possible mission types
      enum:
        - Listening/Observation
        - Direct Action
        - Hostage rescue
        - Asset transport
        - Sensor emplacement
        - Intelligence gathering
        - Civil affairs
        - Training
        - Sabotage
        - Security patrol
        - Fire support
        - Nuclear deterrence
        - Extraction
        - Unknown
    CriticalLevelEnum:
      type: string
      enum:
        - none
        - normal
        - important
        - priority
        - vip
    SimEnvironmentTypeEnum:
      type: string
      description: Basic setting for the entire scenario
      enum:
        - jungle
        - submarine
        - urban
        - desert
    CivilianPresenceEnum:
      type: string
      description: Indicator of how many civilians are present in the mission
      enum:
        - none
        - limited
        - some
        - extensive
        - crowd
    CommunicationCapabilityEnum:
      type: string
      description: current operational communication capability and limitations
      enum:
        - all
        - satellite
        - radio
        - voice
        - visual
    WeatherTypeEnum:
      type: string
      description: a natural language description of local weather conditions
      enum:
        - clear
        - wind
        - clouds
        - rain
        - fog
        - thunderstorm
        - hail
        - sleet
        - snow
    TerrainTypeEnum:
      type: string
      description: a natural language description of the local terrain
      enum:
        - jungle
        - indoors
        - urban
        - dunes
        - forest
        - beach
        - mountain
        - plains
        - hills
        - swamp
        - flat
        - rough
        - extreme
    FloraTypeEnum:
      type: string
      description: a natural language description of the local vegetation
      enum:
        - none
        - limited
        - normal
        - lush
        - extensive
    FaunaTypeEnum:
      type: string
      description: a natural language description of the local animals/insects
      enum:
        - none
        - limited
        - normal
        - high
        - pervasive
    LightingTypeEnum:
      type: string
      description: Descriptor of available natural or man-made lighting
      enum:
        - none
        - limited
        - normal
        - bright
        - flashing
    VisibilityTypeEnum:
      type: string
      description: Descriptor for operational visibility; affected by time of day, lighting, weather, terrain, etc.
      enum:
        - none
        - low
        - normal
        - good
        - excellent
        - variable
    AmbientNoiseEnum:
      type: string
      description: Descriptor for background noise level
      enum:
        - none
        - quiet
        - normal
        - noisy
        - extreme
    PeakNoiseEnum:
      type: string
      description: Descriptor for peak noise level due to gunfire, vehicles, helicopters, etc.
      enum:
        - none
        - quiet
        - normal
        - noisy
        - extreme
    MovementRestrictionEnum:
      type: string
      description: Operational movement restrictions due to any factor including terrain, weather, enemy activity, etc.
      enum:
        - unrestricted
        - minimal
        - moderate
        - severe
        - extreme
    SoundRestrictionEnum:
      type: string
      description: Operational sound restrictions due to any factor
      enum:
        - unrestricted
        - minimal
        - moderate
        - severe
        - extreme
    OxygenLevelsEnum:
      type: string
      description: Oxygen levels due to any factor that may impact decision-making
      enum:
        - normal
        - limited
        - scarce
        - none
    InjuryTriggerEnum:
      type: string
      description: What source(s) caused character injuries.
      enum:
        - explosion
        - firearm
        - fall
        - pathogen
        - animal
        - plant
        - water
        - collision
        - equipment
        - attack
        - fire
        - stress
        - chemical
    AidTypeEnum:
      type: string
      description: Means of evacuation
      enum:
        - AMEV
        - truck
        - helicopter
        - unknown
    SupplyTypeEnum:
      type: string
      description: an enumeration of available supply types
      example: Tourniquet
      enum:
        - Tourniquet
        - Pressure bandage
        - Hemostatic gauze
        - Decompression Needle
        - Nasopharyngeal airway
        - Pulse Oximeter
        - Blanket
        - Epi Pen
        - Vented Chest Seal
        - Pain Medications
        - Splint
        - Blood
    DemographicSexEnum:
      type: string
      description: the sex of the character, omit if unknown/indeterminate
      example: F
      enum:
        - M
        - F
    MilitaryDispositionEnum:
      type: string
      description: How the character is to be treated in a military context
      enum:
        - Allied US
        - Allied
        - Civilian
        - Military Adversary
        - Non-Military Adversary
    MilitaryBranchEnum:
      type: string
      description: Branch of the US military.
      enum:
        - US Army
        - US Navy
        - US Air Force
        - US Marine Corps
        - US Space Force
        - US Coast Guard
    MilitaryRankEnum:
      type: string
      description: the cross-branch military rank (paygrade)
      enum:
        - E-1
        - E-2
        - E-3
        - E-4
        - E-5
        - E-6
        - E-7
        - E-8
        - E-9
        - E-9 (special)
        - W-1
        - W-2
        - W-3
        - W-4
        - W-5
        - O-1
        - O-2
        - O-3
        - O-4
        - O-5
        - O-6
        - O-7
        - O-8
        - O-9
        - O-10
        - Special
        - Special (Navy)
        - Special (Coast Guard)
    MilitaryRankTitleEnum:
      type: string
      description: the branch-specific military rank
      enum:
        - Private (Recruit)
        - Private
        - Private First Class
        - Specialist
        - Corporal
        - Sergeant
        - Staff Sergeant
        - Sergeant First Class
        - Master Sergeant
        - First Sergeant
        - Sergeant Major
        - Command Sergeant Major
        - Sergeant Major of the Army
        - Warrant Officer 1
        - Chief Warrant Officer 2
        - Chief Warrant Officer 3
        - Chief Warrant Officer 4
        - Chief Warrant Officer 5
        - 2nd Lieutenant
        - 1st Lieutenant
        - Captain
        - Major
        - Lieutenant Colonel
        - Colonel
        - Brigadier General
        - Major General
        - Lieutenant General
        - Army Chief of Staff (special)
        - General
        - Airman Basic
        - Airman
        - Airman First Class
        - Senior Airman
        - Technical Sergeant
        - Senior Master Sergeant
        - First Sergeant / Chief Master Sergeant
        - Chief Master Sergeant of the Air Force
        - Air Force Chief of Staff (special)
        - Seaman Recruit
        - Seaman Apprentice
        - Seaman
        - Petty Officer Third Class
        - Petty Officer Second Class
        - Petty Officer First Class
        - Chief Petty Officer
        - Senior Chief Petty Officer
        - Master Chief Petty Officer
        - Master Chief Petty Officer of the Navy
        - Master Chief Petty Officer of the Coast Guard
        - Chief Warrant Officer
        - Ensign
        - Lieutenant, Junior Grade
        - Lieutenant Commander
        - Commander
        - Rear Admiral (Lower Half)
        - Rear Admiral (Upper Half)
        - Vice Admiral
        - Chief of Naval Operations (special)
        - Commandant of the Coast Guard (special)
        - Admiral
        - Lance Corporal
        - Gunnery Sergeant
        - Master Gunnery Sergeant
        - Sergeant Major of the Marine Corps
        - Warrant Officer
        - Commandant of the Marine Corps
        - Specialist 1
        - Specialist 2
        - Specialist 3
        - Specialist 4
        - Chief Master Sergeant
        - Chief Master Sergeant of the Space Force
        - Chief of Space Operations
    CharacterRoleEnum:
      type: string
      description: The primary role a character has in the mission, in terms of the skills they possess
      enum:
        - Infantry
        - SEAL
        - Command
        - Intelligence
        - Medical
        - Specialist
        - Communications
    CharacterImportanceEnum:
      type: string
      description: How important the character is to the mission
      enum:
        - none
        - normal
        - important
        - priority
        - vip
    SkillTypeEnum:
      type: string
      description: the type of skill the character has
      enum:
        - Medical
        - Combat
        - Specialist
        - Communications
        - Command
    InjuryTypeEnum:
      type: string
      description: a brief label for the type of injury
      example: Laceration
      enum:
        - Forehead Scrape
        - Ear Bleed
        - Asthmatic
        - Laceration
        - Puncture
        - Shrapnel
        - Chest Collapse
        - Amputation
        - Burn
        - Abrasion
        - Internal
    InjuryLocationEnum:
      type: string
      description: the injury location on the character's body
      example: right forearm
      enum:
        - right forearm
        - left forearm
        - right calf
        - left calf
        - right thigh
        - left thigh
        - right stomach
        - left stomach
        - right bicep
        - left bicep
        - right shoulder
        - left shoulder
        - right side
        - left side
        - right chest
        - left chest
        - right wrist
        - left wrist
        - left face
        - right face
        - left neck
        - right neck
        - internal
        - unspecified
    AvpuLevelEnum:
      type: string
      description: Character level of response
      enum:
        - ALERT
        - VOICE
        - PAIN
        - UNRESPONSIVE
    MentalStatusEnum:
      type: string
      description: description of the character's overall demeanor
      example: CALM
      enum:
        - AGONY
        - CALM
        - CONFUSED
        - UPSET
        - UNRESPONSIVE
    BreathingLevelEnum:
      type: string
      description: a descriptor for the character's breathing
      example: NORMAL
      enum:
        - NORMAL
        - FAST
        - RESTRICTED
        - NONE
    SemanticTypeEnum:
      description: Whether multiple transition conditions use and, or, or not semantics
      type: string
      enum:
        - and
        - or
        - not
    ActionTypeEnum:
      type: string
      description: The action type taken from a controlled vocabulary
      example: APPLY_TREATMENT
      enum:
        - APPLY_TREATMENT
        - CHECK_ALL_VITALS
        - CHECK_PULSE
        - CHECK_RESPIRATION
        - DIRECT_MOBILE_CASUALTIES
        - END_SCENARIO
        - MOVE_TO_EVAC
        - SITREP
        - TAG_CHARACTER
  responses:
    server_error:
      description: An exception occurred on the server; see returned error string.
      content:
        text/plain:
          schema:
            type: string
            x-content-type: text/plain
    state_returned:
      description: "Successful operation, scenario state returned"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/State"
