components:
  responses:
    server_error:
      content:
        text/plain:
          schema:
            type: string
            x-content-type: text/plain
      description: An exception occurred on the server; see returned error string.
    state_returned:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/State'
      description: Successful operation, scenario state returned
  schemas:
    Action:
      description: An encapulation of a single action taken by a DM
      properties:
        character_id:
          description: The ID of the character being acted upon
          type: string
        choice:
          description: A valid choice for the specified probe_id
          type: string
        condition_semantics:
          $ref: '#/components/schemas/SemanticTypeEnum'
        conditions:
          $ref: '#/components/schemas/Conditions'
        id:
          description: action ID
          type: string
        kdma_association:
          additionalProperties:
            format: float
            type: number
          description: KDMA associations with this action used in training
          example:
          - Mission: 0.8
          type: object
        parameters:
          additionalProperties:
            type: string
          description: key-value pairs containing additional action-specific parameters
          example:
          - treatment: Tourniquet
          - location: right forearm
          type: object
        probe_id:
          description: A valid probe_id from the appropriate TA1
          type: string
        repeatable:
          description: Whether or not this action should remain after it's selected
            by an ADM.
          type: boolean
        type:
          $ref: '#/components/schemas/ActionTypeEnum'
        unstructured:
          description: a plain text unstructured description of the action
          example: Check pulse of character [1234].
          type: string
      required:
      - id
      - type
      - unstructured
      - character_id
      - probe_id
      - choice
      type: object
    ActionTypeEnum:
      description: The action type taken from a controlled vocabulary
      enum:
      - APPLY_TREATMENT
      - CHECK_ALL_VITALS
      - CHECK_PULSE
      - CHECK_RESPIRATION
      - DIRECT_MOBILE_CASUALTIES
      - END_SCENARIO
      - MOVE_TO_EVAC
      - SITREP
      - TAG_CHARACTER
      example: APPLY_TREATMENT
      type: string
    AidDelay:
      description: Properties related to CASEVAC or MEDEVAC
      properties:
        delay:
          description: CASEVAC or MEDEVAC timer, in minutes
          format: float
          type: number
        max_transport:
          description: Maximum number of casualties that can be transported
          type: integer
        type:
          $ref: '#/components/schemas/AidTypeEnum'
      required:
      - delay
      type: object
    AidTypeEnum:
      description: Means of evacuation
      enum:
      - AMEV
      - truck
      - helicopter
      - unknown
      type: string
    AlignmentResults:
      description: Computed KDMA profile and alignment score for a set of decisions.
      properties:
        alignment_source:
          items:
            $ref: '#/components/schemas/AlignmentSource'
          title: Alignment Source
          type: array
        alignment_target_id:
          description: ID of desired profile to align responses to.
          title: Alignment Target Id
          type: string
        kdma_values:
          description: Computed KDMA profile from results
          items:
            $ref: '#/components/schemas/KDMA_Value'
          title: Kdma Values
          type: array
        score:
          description: Measured alignment, 0 (completely unaligned) - 1 (completely
            aligned).
          maximum: 1
          minimum: 0
          title: Score
          type: number
      required:
      - alignment_source
      - alignment_target_id
      - score
      - kdma_values
      title: AlignmentResults
      type: object
    AlignmentSource:
      description: 'Describes which session/probe responses were used to

        compute an alignment score, allowing for lots

        of flexibility.'
      properties:
        probes:
          description: List of ID's of probes used to compute alignment.
          items:
            type: string
          title: Probes
          type: array
        scenario_id:
          description: Unique ID for user session.
          title: Scenario Id
          type: string
      required:
      - scenario_id
      - probes
      title: AlignmentSource
      type: object
    AlignmentTarget:
      description: list of KDMAs to align to
      example:
        id: id
        kdma_values:
        - kdma: mission
          value: 0.8
        - kdma: mission
          value: 0.8
      properties:
        id:
          description: globally unique alignment target id
          type: string
        kdma_values:
          description: list of KDMAs to align to
          items:
            $ref: '#/components/schemas/KDMA_Value'
          type: array
      required:
      - id
      - kdma_values
      type: object
    AmbientNoiseEnum:
      description: Descriptor for background noise level
      enum:
      - none
      - quiet
      - normal
      - noisy
      - extreme
      type: string
    AvpuLevelEnum:
      description: Character level of response
      enum:
      - ALERT
      - VOICE
      - PAIN
      - UNRESPONSIVE
      type: string
    BreathingLevelEnum:
      description: a descriptor for the character's breathing
      enum:
      - NORMAL
      - FAST
      - RESTRICTED
      - NONE
      example: NORMAL
      type: string
    Character:
      description: encapulation of a single character in the scenario
      properties:
        demographics:
          $ref: '#/components/schemas/Demographics'
        id:
          description: string, globally unique character identifier
          type: string
        injuries:
          description: an array of character injuries
          items:
            $ref: '#/components/schemas/Injury'
          type: array
        name:
          description: display name, as in a dashboard
          type: string
        rapport:
          description: A measure of closeness or affinity towards the player/medic
          format: float
          type: number
        unstructured:
          description: natural language text description of the character
          type: string
        unstructured_postassess:
          description: Natural language, plain text description of the character,
            including injuries, demographics, and rapport
          type: string
        vitals:
          $ref: '#/components/schemas/Vitals'
      required:
      - id
      - name
      - unstructured
      - demographics
      - vitals
      type: object
    CharacterImportanceEnum:
      description: How important the character is to the mission
      enum:
      - none
      - normal
      - important
      - priority
      - vip
      type: string
    CharacterRoleEnum:
      description: The primary role a character has in the mission, in terms of the
        skills they possess
      enum:
      - Infantry
      - SEAL
      - Command
      - Intelligence
      - Medical
      - Specialist
      - Communications
      type: string
    CivilianPresenceEnum:
      description: Indicator of how many civilians are present in the mission
      enum:
      - none
      - limited
      - some
      - extensive
      - crowd
      type: string
    CommunicationCapabilityEnum:
      description: current operational communication capability and limitations
      enum:
      - all
      - satellite
      - radio
      - voice
      - visual
      type: string
    Conditions:
      description: Conditions that specify whether to transition to the next scene
        or send a probe response
      properties:
        actions:
          description: multiple action ID lists have "or" semantics; multiple action
            IDs within a list have "and" semantics
          items:
            items:
              type: string
            type: array
          type: array
        character_vitals:
          items:
            description: The minimum vitals of the specified character
            properties:
              character_id:
                description: The ID of the character in question
                type: string
              vitals:
                $ref: '#/components/schemas/Vitals'
            type: object
          type: array
        elapsed_time_gt:
          description: True if the scenario elapsed time (in seconds) is greater than
            the specified value
          type: integer
        elapsed_time_lt:
          description: True if the scenario elapsed time (in seconds) is less than
            the specified value
          type: integer
        probe_responses:
          items:
            type: string
          type: array
        probes:
          items:
            type: string
          type: array
        supplies:
          description: a list of medical supplies available to the DM
          items:
            $ref: '#/components/schemas/Supplies'
          type: array
      type: object
    CriticalLevelEnum:
      enum:
      - none
      - normal
      - important
      - priority
      - vip
      type: string
    DecisionEnvironment:
      description: Elements that impact decision-making
      properties:
        aid_delay:
          $ref: '#/components/schemas/AidDelay'
        air_quality:
          description: Air Quality Index (AQI)
          type: integer
        city_infrastructure:
          description: TBD
          type: string
        injury_triggers:
          $ref: '#/components/schemas/InjuryTriggerEnum'
        movement_restriction:
          $ref: '#/components/schemas/MovementRestrictionEnum'
        oxygen_levels:
          $ref: '#/components/schemas/OxygenLevelsEnum'
        population_density:
          description: Population per square mile
          format: float
          type: number
        sound_restriction:
          $ref: '#/components/schemas/SoundRestrictionEnum'
        unstructured:
          description: Natural language, plain text description of decision-impacting
            environmental factors
          type: string
      required:
      - unstructured
      type: object
    DemographicSexEnum:
      description: the sex of the character, omit if unknown/indeterminate
      enum:
      - M
      - F
      example: F
      type: string
    Demographics:
      description: Basic properties about the character
      properties:
        age:
          description: the age of the character, omit if unknown
          example: 32
          format: int16
          type: integer
        military_branch:
          $ref: '#/components/schemas/MilitaryBranchEnum'
        military_disposition:
          $ref: '#/components/schemas/MilitaryDispositionEnum'
        mission_importance:
          $ref: '#/components/schemas/CharacterImportanceEnum'
        race:
          description: Race or ethnicity
          type: string
        rank:
          $ref: '#/components/schemas/MilitaryRankEnum'
        rank_title:
          $ref: '#/components/schemas/MilitaryRankTitleEnum'
        role:
          $ref: '#/components/schemas/CharacterRoleEnum'
        sex:
          $ref: '#/components/schemas/DemographicSexEnum'
        skills:
          items:
            $ref: '#/components/schemas/Skills'
          type: array
      required:
      - age
      - sex
      - race
      type: object
    Environment:
      description: Environmental parameters that impact either decision-making, the
        simulation environment, or both
      properties:
        decision_environment:
          $ref: '#/components/schemas/DecisionEnvironment'
        sim_environment:
          $ref: '#/components/schemas/SimEnvironment'
      required:
      - sim_environment
      - decision_environment
      type: object
    FaunaTypeEnum:
      description: a natural language description of the local animals/insects
      enum:
      - none
      - limited
      - normal
      - high
      - pervasive
      type: string
    FloraTypeEnum:
      description: a natural language description of the local vegetation
      enum:
      - none
      - limited
      - normal
      - lush
      - extensive
      type: string
    Injury:
      description: An injury on a character. The name field defines a controlled vocabulary.
      properties:
        hidden:
          description: Whether the injury is known prior to assessment
          type: boolean
        location:
          $ref: '#/components/schemas/InjuryLocationEnum'
        name:
          $ref: '#/components/schemas/InjuryTypeEnum'
        severity:
          description: the apparent severity of the injury from 0 (low) to 1.0 (high)
          example: 0.8
          format: float
          type: number
      required:
      - location
      - name
      - hidden
      type: object
    InjuryLocationEnum:
      description: the injury location on the character's body
      enum:
      - right forearm
      - left forearm
      - right calf
      - left calf
      - right thigh
      - left thigh
      - right stomach
      - left stomach
      - right bicep
      - left bicep
      - right shoulder
      - left shoulder
      - right side
      - left side
      - right chest
      - left chest
      - right wrist
      - left wrist
      - left face
      - right face
      - left neck
      - right neck
      - internal
      - unspecified
      example: right forearm
      type: string
    InjuryTriggerEnum:
      description: What source(s) caused character injuries.
      enum:
      - explosion
      - firearm
      - fall
      - pathogen
      - animal
      - plant
      - water
      - collision
      - equipment
      - attack
      - fire
      - stress
      - chemical
      type: string
    InjuryTypeEnum:
      description: a brief label for the type of injury
      enum:
      - Forehead Scrape
      - Ear Bleed
      - Asthmatic
      - Laceration
      - Puncture
      - Shrapnel
      - Chest Collapse
      - Amputation
      - Burn
      - Abrasion
      - Internal
      example: Laceration
      type: string
    KDMA_Value:
      description: a KDMA and its value
      example:
        kdma: mission
        value: 0.8
      properties:
        kdma:
          description: KDMA name
          example: mission
          type: string
        value:
          description: target alignment value
          example: 0.8
          format: float
          type: number
      required:
      - kdma
      - value
      type: object
    LightingTypeEnum:
      description: Descriptor of available natural or man-made lighting
      enum:
      - none
      - limited
      - normal
      - bright
      - flashing
      type: string
    MentalStatusEnum:
      description: description of the character's overall demeanor
      enum:
      - AGONY
      - CALM
      - CONFUSED
      - UPSET
      - UNRESPONSIVE
      example: CALM
      type: string
    MilitaryBranchEnum:
      description: Branch of the US military.
      enum:
      - US Army
      - US Navy
      - US Air Force
      - US Marine Corps
      - US Space Force
      - US Coast Guard
      type: string
    MilitaryDispositionEnum:
      description: How the character is to be treated in a military context
      enum:
      - Allied US
      - Allied
      - Civilian
      - Military Adversary
      - Non-Military Adversary
      type: string
    MilitaryRankEnum:
      description: the cross-branch military rank (paygrade)
      enum:
      - E-1
      - E-2
      - E-3
      - E-4
      - E-5
      - E-6
      - E-7
      - E-8
      - E-9
      - E-9 (special)
      - W-1
      - W-2
      - W-3
      - W-4
      - W-5
      - O-1
      - O-2
      - O-3
      - O-4
      - O-5
      - O-6
      - O-7
      - O-8
      - O-9
      - O-10
      - Special
      - Special (Navy)
      - Special (Coast Guard)
      type: string
    MilitaryRankTitleEnum:
      description: the branch-specific military rank
      enum:
      - Private (Recruit)
      - Private
      - Private First Class
      - Specialist
      - Corporal
      - Sergeant
      - Staff Sergeant
      - Sergeant First Class
      - Master Sergeant
      - First Sergeant
      - Sergeant Major
      - Command Sergeant Major
      - Sergeant Major of the Army
      - Warrant Officer 1
      - Chief Warrant Officer 2
      - Chief Warrant Officer 3
      - Chief Warrant Officer 4
      - Chief Warrant Officer 5
      - 2nd Lieutenant
      - 1st Lieutenant
      - Captain
      - Major
      - Lieutenant Colonel
      - Colonel
      - Brigadier General
      - Major General
      - Lieutenant General
      - Army Chief of Staff (special)
      - General
      - Airman Basic
      - Airman
      - Airman First Class
      - Senior Airman
      - Technical Sergeant
      - Senior Master Sergeant
      - First Sergeant / Chief Master Sergeant
      - Chief Master Sergeant of the Air Force
      - Air Force Chief of Staff (special)
      - Seaman Recruit
      - Seaman Apprentice
      - Seaman
      - Petty Officer Third Class
      - Petty Officer Second Class
      - Petty Officer First Class
      - Chief Petty Officer
      - Senior Chief Petty Officer
      - Master Chief Petty Officer
      - Master Chief Petty Officer of the Navy
      - Master Chief Petty Officer of the Coast Guard
      - Chief Warrant Officer
      - Ensign
      - Lieutenant, Junior Grade
      - Lieutenant Commander
      - Commander
      - Rear Admiral (Lower Half)
      - Rear Admiral (Upper Half)
      - Vice Admiral
      - Chief of Naval Operations (special)
      - Commandant of the Coast Guard (special)
      - Admiral
      - Lance Corporal
      - Gunnery Sergeant
      - Master Gunnery Sergeant
      - Sergeant Major of the Marine Corps
      - Warrant Officer
      - Commandant of the Marine Corps
      - Specialist 1
      - Specialist 2
      - Specialist 3
      - Specialist 4
      - Chief Master Sergeant
      - Chief Master Sergeant of the Space Force
      - Chief of Space Operations
      type: string
    Mission:
      description: Mission parameters that impact decision-making
      properties:
        civilian_presence:
          $ref: '#/components/schemas/CivilianPresenceEnum'
        communication_capability:
          $ref: '#/components/schemas/CommunicationCapabilityEnum'
        critical_ids:
          additionalProperties:
            $ref: '#/components/schemas/CriticalLevelEnum'
          description: A list of pairs of character ids with an indicator of how mission-critical
            the character is
          example:
          - 123: none
          - 456: priority
          type: object
        medical_policies:
          description: Medical policies in effect in a mission, to inform decision-making
          type: string
        mission_type:
          $ref: '#/components/schemas/MissionTypeEnum'
        political_climate:
          description: The political climate in a mission to inform decision-making
          type: string
        roe:
          description: rules of engagement to inform decision-making, but not to restrict
            decision space
          type: string
        unstructured:
          description: natural language description of current mission
          example: Place sensors in and around the jungle base
          type: string
      required:
      - mission_type
      - unstructured
      type: object
    MissionTypeEnum:
      description: enumeration of possible mission types
      enum:
      - Listening/Observation
      - Direct Action
      - Hostage rescue
      - Asset transport
      - Sensor emplacement
      - Intelligence gathering
      - Civil affairs
      - Training
      - Sabotage
      - Security patrol
      - Fire support
      - Nuclear deterrence
      - Extraction
      - Unknown
      type: string
    MovementRestrictionEnum:
      description: Operational movement restrictions due to any factor including terrain,
        weather, enemy activity, etc.
      enum:
      - unrestricted
      - minimal
      - moderate
      - severe
      - extreme
      type: string
    OxygenLevelsEnum:
      description: Oxygen levels due to any factor that may impact decision-making
      enum:
      - normal
      - limited
      - scarce
      - none
      type: string
    PeakNoiseEnum:
      description: Descriptor for peak noise level due to gunfire, vehicles, helicopters,
        etc.
      enum:
      - none
      - quiet
      - normal
      - noisy
      - extreme
      type: string
    Probe:
      properties:
        character_id:
          description: A valid character ID from the scene
          type: string
        delayed:
          description: The probe response to send for a DELAYED tag
          type: string
        expectant:
          description: The probe response to send for a EXPECTANT tag
          type: string
        immediate:
          description: The probe response to send for a IMMEDIATE tag
          type: string
        minimal:
          description: The probe response to send for a MINIMAL tag
          type: string
        probe_id:
          description: A valid probe_id from the appropriate TA1
          type: string
      required:
      - character_id
      - probe_id
      - minimal
      - delayed
      - immediate
      - expectant
      type: object
    Scenario:
      description: a tactical scenario
      properties:
        id:
          default: '1234'
          description: a globally unique id for the scenario
          type: string
        name:
          description: human-readable scenario name, not necessarily unique
          example: IED Explosion
          type: string
        scenes:
          description: A list of specification for all scenes in the scenario
          items:
            $ref: '#/components/schemas/Scene'
          type: array
        state:
          $ref: '#/components/schemas/State'
      required:
      - id
      - name
      - state
      - scenes
      - scenes
      type: object
    Scene:
      properties:
        actions:
          description: List of available actions
          items:
            $ref: '#/components/schemas/Action'
          type: array
        end_scenario_allowed:
          description: Whether ADMs can end the scenario during this scene
          type: boolean
        index:
          description: The order the scene appears in the scenario
          type: integer
        state:
          $ref: '#/components/schemas/State'
        tagging:
          $ref: '#/components/schemas/Tagging'
        transition_semantics:
          $ref: '#/components/schemas/SemanticTypeEnum'
        transitions:
          $ref: '#/components/schemas/Conditions'
      required:
      - index
      - state
      - end_scenario_allowed
      - actions
      type: object
    SemanticTypeEnum:
      description: Whether multiple transition conditions use and, or, or not semantics
      enum:
      - and
      - or
      - not
      type: string
    SimEnvironment:
      description: Elements that impact simulation configuration
      properties:
        fauna:
          $ref: '#/components/schemas/FaunaTypeEnum'
        flora:
          $ref: '#/components/schemas/FloraTypeEnum'
        humidity:
          description: percentage of relative humidity
          example: 80
          format: float
          type: number
        lighting:
          $ref: '#/components/schemas/LightingTypeEnum'
        noise_ambient:
          $ref: '#/components/schemas/AmbientNoiseEnum'
        noise_peak:
          $ref: '#/components/schemas/PeakNoiseEnum'
        temperature:
          description: numerical temperature in degrees Fahrenheit
          example: 82.5
          format: float
          type: number
        terrain:
          $ref: '#/components/schemas/TerrainTypeEnum'
        type:
          $ref: '#/components/schemas/SimEnvironmentTypeEnum'
        visibility:
          $ref: '#/components/schemas/VisibilityTypeEnum'
        weather:
          $ref: '#/components/schemas/WeatherTypeEnum'
      required:
      - type
      type: object
    SimEnvironmentTypeEnum:
      description: Basic setting for the entire scenario
      enum:
      - jungle
      - submarine
      - urban
      - desert
      type: string
    SkillTypeEnum:
      description: the type of skill the character has
      enum:
      - Medical
      - Combat
      - Specialist
      - Communications
      - Command
      type: string
    Skills:
      properties:
        level:
          description: the level of expertise the character has in their skill
          format: float
          type: number
        skill_type:
          $ref: '#/components/schemas/SkillTypeEnum'
      required:
      - skill_type
      - level
      type: object
    SoundRestrictionEnum:
      description: Operational sound restrictions due to any factor
      enum:
      - unrestricted
      - minimal
      - moderate
      - severe
      - extreme
      type: string
    State:
      description: the current tactical & environmental state of the scenario and
        of its characters.
      properties:
        characters:
          description: the list of characters in the scenario
          items:
            $ref: '#/components/schemas/Character'
          type: array
        environment:
          $ref: '#/components/schemas/Environment'
        mission:
          $ref: '#/components/schemas/Mission'
        supplies:
          description: a list of medical supplies available to the DM
          items:
            $ref: '#/components/schemas/Supplies'
          type: array
        threat_state:
          $ref: '#/components/schemas/ThreatState'
        unstructured:
          description: text description of current state
          type: string
      required:
      - unstructured
      - environment
      - supplies
      - characters
      type: object
    Supplies:
      description: a single type of medical supply available to the medic
      example:
        quantity: 4
        type: Tourniquet
      properties:
        quantity:
          description: the number (count) of this item available to the medic at the
            present time
          example: 4
          format: int32
          type: integer
        reusable:
          description: Whether or not item is consumable/reusable
          type: boolean
        type:
          $ref: '#/components/schemas/SupplyTypeEnum'
      required:
      - quantity
      - type
      - reusable
      type: object
    SupplyTypeEnum:
      description: an enumeration of available supply types
      enum:
      - Tourniquet
      - Pressure bandage
      - Hemostatic gauze
      - Decompression Needle
      - Nasopharyngeal airway
      - Pulse Oximeter
      - Blanket
      - Epi Pen
      - Vented Chest Seal
      - Pain Medications
      - Splint
      - Blood
      example: Tourniquet
      type: string
    Tagging:
      description: Scene-level tagging configuration
      properties:
        enabled:
          type: boolean
        probe_responses:
          items:
            $ref: '#/components/schemas/Probe'
          type: array
        reference:
          type: integer
        repeatable:
          type: boolean
      type: object
    TerrainTypeEnum:
      description: a natural language description of the local terrain
      enum:
      - jungle
      - indoors
      - urban
      - dunes
      - forest
      - beach
      - mountain
      - plains
      - hills
      - swamp
      - flat
      - rough
      - extreme
      type: string
    Threat:
      additionalProperties:
        type: string
      description: 'list of pairs of type (enum like IED, Gunshots, fire, etc)

        and severity (float 0 (no threat) - 1 (max severity))'
      example:
        severity: 0.5
        type: Gunfire
      type: object
    ThreatState:
      description: Description of the current threat to the characters, including
        the medic
      example:
        threats:
        - severity: 0.5
          type: Gunfire
        - severity: 0.5
          type: Gunfire
        unstructured: No additional threats are detected
      properties:
        threats:
          description: An array of threats
          items:
            $ref: '#/components/schemas/Threat'
          type: array
        unstructured:
          description: text description of current threat state
          example: No additional threats are detected
          type: string
      required:
      - unstructured
      type: object
    VisibilityTypeEnum:
      description: Descriptor for operational visibility; affected by time of day,
        lighting, weather, terrain, etc.
      enum:
      - none
      - low
      - normal
      - good
      - excellent
      - variable
      type: string
    Vitals:
      description: vital levels for a character, omit properties if unknown
      properties:
        Spo2:
          description: blood oxygen level
          format: float
          type: number
        avpu:
          $ref: '#/components/schemas/AvpuLevelEnum'
        breathing:
          $ref: '#/components/schemas/BreathingLevelEnum'
        conscious:
          description: whether or not the character is conscious
          example: true
          type: boolean
        hrpmin:
          description: heart rate in beats per minute
          format: int16
          type: integer
        mental_status:
          $ref: '#/components/schemas/MentalStatusEnum'
      required:
      - conscious
      - avpu
      - mental_status
      - breathing
      - hrpmin
      - Spo2
      - conscious
      - avpu
      - mental_status
      - breathing
      - hrpmin
      - Spo2
      type: object
    WeatherTypeEnum:
      description: a natural language description of local weather conditions
      enum:
      - clear
      - wind
      - clouds
      - rain
      - fog
      - thunderstorm
      - hail
      - sleet
      - snow
      type: string
info:
  description: 'This is the specification of the TA3 API for In The Moment (ITM).  Currently,
    the Evaluation API for TA2 supports functionality for the September milestone.


    The API is based on the OpenAPI 3.0 specification.'
  title: ITM TA3 API
  version: 0.2.2
openapi: 3.0.3
paths:
  /ta2/getAlignmentTarget:
    get:
      description: Retrieve alignment target for the scenario with the specified id
      operationId: get_alignment_target
      parameters:
      - description: a unique session_id, as returned by /ta2/startSession
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the scenario for which to retrieve alignment target
        explode: true
        in: query
        name: scenario_id
        required: true
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlignmentTarget'
          description: Successful operation, alignment target returned
        '400':
          description: Scenario Complete or Invalid Session ID
        '404':
          description: Scenario ID not found
        '500':
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: An exception occurred on the server; see returned error string.
      summary: Retrieve alignment target for the scenario
      tags:
      - itm-ta2-eval
      x-openapi-router-controller: swagger_server.controllers.itm_ta2_eval_controller
  /ta2/getSessionAlignment:
    get:
      description: Retrieve the current session alignment for the session with the
        specified id
      operationId: get_session_alignment
      parameters:
      - description: a unique session_id, as returned by /ta2/startSession
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          type: string
        style: form
      - description: alignment target id
        explode: true
        in: query
        name: target_id
        required: true
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlignmentResults'
          description: Successful Response
        '400':
          description: Session ID not found
        '403':
          description: Session alignment can only be requested during a training session
        '500':
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: An exception occurred on the server; see returned error string.
      summary: Retrieve session alignment from TA1
      tags:
      - itm-ta2-eval
      x-openapi-router-controller: swagger_server.controllers.itm_ta2_eval_controller
  /ta2/scenario:
    get:
      description: Get the next scenario in a session with the specified ADM name,
        returning a Scenario object and unique id
      operationId: start_scenario
      parameters:
      - description: a unique session_id, as returned by /ta2/startSession
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          type: string
        style: form
      - description: a scenario id to start, used internally by TA3
        explode: true
        in: query
        name: scenario_id
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: Successful operation; scenario data returned, or session_complete
            is True
        '400':
          description: Invalid Session ID or there is already an active scenario
        '403':
          description: Specifying a scenario ID is unauthorized
        '404':
          description: Scenario ID not found
        '500':
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: An exception occurred on the server; see returned error string.
      summary: Get the next scenario
      tags:
      - itm-ta2-eval
      x-openapi-router-controller: swagger_server.controllers.itm_ta2_eval_controller
  /ta2/startSession:
    get:
      description: Get unique session id for grouping answers from a collection of
        scenarios together
      operationId: start_session
      parameters:
      - description: A self-assigned ADM name.  Can add authentication later.
        explode: true
        in: query
        name: adm_name
        required: true
        schema:
          type: string
        style: form
      - description: the type of session to start (`eval` or a TA1 name)
        explode: true
        in: query
        name: session_type
        required: true
        schema:
          example: eval
          type: string
        style: form
      - description: whether or not this is a training session with TA2
        explode: true
        in: query
        name: kdma_training
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: the maximum number of scenarios requested, not supported in `eval`
          sessions
        explode: true
        in: query
        name: max_scenarios
        required: false
        schema:
          format: int16
          type: integer
        style: form
      responses:
        '200':
          content:
            text/plain:
              schema:
                description: a new session Id to use in subsequent calls
                type: string
                x-content-type: text/plain
          description: Successful operation
        '400':
          description: Invalid session type or max_scenarios
        '500':
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: An exception occurred on the server; see returned error string.
        '503':
          description: The server is not ready to start a session
      summary: Start a new session
      tags:
      - itm-ta2-eval
      x-openapi-router-controller: swagger_server.controllers.itm_ta2_eval_controller
  /ta2/takeAction:
    post:
      description: Take the specified Action within a scenario
      operationId: take_action
      parameters:
      - description: a unique session_id, as returned by /ta2/startSession
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
        description: Encapsulation of an action taken by a DM in the context of the
          scenario
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: Successful operation, scenario state returned
        '400':
          description: Invalid action or Session ID
        '500':
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: An exception occurred on the server; see returned error string.
      summary: Take an action within a scenario
      tags:
      - itm-ta2-eval
      x-openapi-router-controller: swagger_server.controllers.itm_ta2_eval_controller
  /ta2/{scenario_id}/getAvailableActions:
    get:
      description: Retrieve a list of currently available actions in the scenario
        with the specified id
      operationId: get_available_actions
      parameters:
      - description: a unique session_id, as returned by /ta2/startSession
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the scenario for which to retrieve available actions
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
                x-content-type: application/json
          description: Successful operation; array of possible Actions returned
        '400':
          description: Scenario Complete or Invalid Session ID
        '404':
          description: Scenario ID not found
        '500':
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: An exception occurred on the server; see returned error string.
      summary: Get a list of currently available ADM actions
      tags:
      - itm-ta2-eval
      x-openapi-router-controller: swagger_server.controllers.itm_ta2_eval_controller
  /ta2/{scenario_id}/getState:
    get:
      description: Retrieve state of the scenario with the specified id
      operationId: get_scenario_state
      parameters:
      - description: a unique session_id, as returned by /ta2/startSession
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          type: string
        style: form
      - description: the ID of the scenario for which to retrieve status
        explode: false
        in: path
        name: scenario_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: Successful operation, scenario state returned
        '400':
          description: Invalid Session ID
        '404':
          description: Scenario ID not found
        '500':
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: An exception occurred on the server; see returned error string.
      summary: Retrieve scenario state
      tags:
      - itm-ta2-eval
      x-openapi-router-controller: swagger_server.controllers.itm_ta2_eval_controller
servers:
- url: /
tags:
- description: Endpoints for TA2 Evaluation
  name: itm-ta2-eval
